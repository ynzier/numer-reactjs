{"ast":null,"code":"var _jsxFileName = \"C:\\\\numer_site\\\\src\\\\components\\\\Bisection.js\";\nimport React, { useState, Component } from 'react';\nimport * as math from 'mathjs';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst handleSubmit = e => {\n  if (btnState === 0) {\n    e.preventDefault();\n    bisection();\n    setBtnState(1);\n  }\n}; //หาXm ปกติ\n\n\nconst findxm = (xl, xr) => {\n  return (parseFloat(xl) + parseFloat(xr)) / 2;\n}; // แก้สมาการ X ใช้ไลบรารี่แมทจ้าา\n\n\nconst funcal = X => {\n  const expression = equation;\n  const expr = math.compile(expression);\n  let scope = {\n    x: parseFloat(X)\n  };\n  return expr.evaluate(scope);\n};\n\nconst bisection = () => {\n  let table = document.getElementById(\"output\");\n  var xm = 0;\n  var n = 0;\n  var check = parseFloat(0.0000000);\n\n  do {\n    xm = findxm(xl, xr);\n    console.log(check); //error\n\n    n++;\n    console.log(n);\n\n    if (funcal(xl) * funcal(xm) > 0) {\n      check = Math.abs((xm - xl) / xm).toFixed(8);\n      xl = xm;\n    } else {\n      check = Math.abs((xm - xr) / xm).toFixed(8);\n      xr = xm;\n    } // Create an empty <tr> element and add it to the 1st position of the table:\n\n\n    let row = table.insertRow(n); // Insert new cells (<td> elements) at the 1st and 2nd position of the \"new\" <tr> element:\n\n    var cell1 = row.insertCell(0);\n    var cell2 = row.insertCell(1);\n    var cell3 = row.insertCell(2);\n    var cell4 = row.insertCell(3);\n    var cell5 = row.insertCell(4); // Add some text to the new cells:\n\n    cell1.innerHTML = n;\n    cell2.innerHTML = xl;\n    cell3.innerHTML = xr;\n    cell4.innerHTML = xm;\n    cell5.innerHTML = check;\n  } while (check > 0.000001);\n};\n\nconst [equation, setEquation] = useState(\"\");\nconst [btnState, setBtnState] = useState(0);\nvar [xl, setXL] = useState();\nvar [xr, setXR] = useState();\nexport default class Bisection extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Equation : \", equation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n          children: \"L\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), \" : \", xl]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n          children: \"R\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this), \" : \", xr]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Equation :\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: equation,\n            onChange: e => setEquation(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n            children: \"L\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 10\n          }, this), \" :\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: xl,\n            onChange: e => setXL(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n            children: \"R\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 10\n          }, this), \" :\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: xr,\n            onChange: e => setXR(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 7\n        }, this), btnState === 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: btnState,\n          value: \"Submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 26\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !btnState,\n          value: \"Submit\",\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 101\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"output\",\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            width: \"20%\",\n            children: \"Iteration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            width: \"25%\",\n            children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"L\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            width: \"25%\",\n            children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"R\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            width: \"30%\",\n            children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"M\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            width: \"30%\",\n            children: \"Error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          class: \"list-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            width: \"20%\",\n            id: \"Iteration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            width: \"25%\",\n            id: \"xl1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            width: \"25%\",\n            id: \"xr1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            width: \"30%\",\n            id: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            width: \"30%\",\n            id: \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/numer_site/src/components/Bisection.js"],"names":["React","useState","Component","math","handleSubmit","e","btnState","preventDefault","bisection","setBtnState","findxm","xl","xr","parseFloat","funcal","X","expression","equation","expr","compile","scope","x","evaluate","table","document","getElementById","xm","n","check","console","log","Math","abs","toFixed","row","insertRow","cell1","insertCell","cell2","cell3","cell4","cell5","innerHTML","setEquation","setXL","setXR","Bisection","render","target","value"],"mappings":"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","sourcesContent":["import React, { useState, Component }  from 'react';\nimport * as math from 'mathjs';\nimport '../App.css';\n\n\n\n\n\nconst handleSubmit = (e) => {\n  if(btnState === 0)\n  {\n    e.preventDefault();\n    bisection();\n    setBtnState(1);\n  }\n};\n\n  //หาXm ปกติ\nconst findxm = (xl, xr) => {\n    return (parseFloat(xl)+parseFloat(xr))/2\n  }\n  \n  // แก้สมาการ X ใช้ไลบรารี่แมทจ้าา\nconst funcal = (X) => {\n    const expression = equation;\n    const expr = math.compile(expression);\n    let scope = {x:parseFloat(X)};\n    return expr.evaluate(scope);\n  }\nconst bisection = () => {\n    let table = document.getElementById(\"output\");\n    var xm = 0;\n    var n = 0;\n    var check = parseFloat(0.0000000);\n    do{\n      xm = findxm(xl,xr);\n      console.log(check);//error\n      n++;\n      console.log(n);\n      if(funcal(xl)*funcal(xm)>0) {\n        check=Math.abs((xm-xl)/xm).toFixed(8);\n        xl=xm;\n      }\n      else {\n        check=Math.abs((xm-xr)/xm).toFixed(8);\n        xr=xm;\n      }\n      // Create an empty <tr> element and add it to the 1st position of the table:\n      let row = table.insertRow(n);\n  \n      // Insert new cells (<td> elements) at the 1st and 2nd position of the \"new\" <tr> element:\n      var cell1 = row.insertCell(0);\n      var cell2 = row.insertCell(1);\n      var cell3 = row.insertCell(2);\n      var cell4 = row.insertCell(3);\n      var cell5 = row.insertCell(4);\n  \n      // Add some text to the new cells:\n      cell1.innerHTML = n;\n      cell2.innerHTML = xl;\n      cell3.innerHTML = xr;\n      cell4.innerHTML = xm;\n      cell5.innerHTML = check;\n    }while(check>0.000001)\n  }\n  const [equation, setEquation] = useState(\"\");\n  const [btnState, setBtnState] = useState(0);\n  var [xl, setXL] = useState();\n  var [xr, setXR] = useState();\nexport default class Bisection extends Component {\n  \n  render(){\n    return (\n    \n    <div>  \n    <p>Equation : {equation}</p>\n    <p>X<sub>L</sub> : {xl}</p>\n    <p>X<sub>R</sub> : {xr}</p>\n      <form onSubmit={handleSubmit}>\n      <label>\n        Equation :\n        <input type=\"text\" value={equation} onChange={e => setEquation(e.target.value)}\n        />\n      </label>\n      <br></br>\n      <label>\n        X<sub>L</sub> :\n        <input type=\"text\" value={xl} onChange={e => setXL(e.target.value)}\n        />\n      </label>\n      <br></br>\n      <label>\n        X<sub>R</sub> :\n        <input type=\"text\" value={xr} onChange={e => setXR(e.target.value)}/>\n      </label>\n      <br></br> \n      {btnState === 0  ? <button type=\"submit\" disabled={btnState} value=\"Submit\">Submit</button> : <button type=\"submit\" disabled={!btnState} value=\"Submit\">Reset</button> }\n\n    </form>\n\n    <table id=\"output\">\n      <tr>\n        <th width=\"20%\">Iteration</th>\n        <th width=\"25%\">X<sub>L</sub></th>\n        <th width=\"25%\">X<sub>R</sub></th>\n        <th width=\"30%\">X<sub>M</sub></th>\n        <th width=\"30%\">Error</th>\n      </tr>\n      <tr class=\"list-data\">\n        <td width=\"20%\" id=\"Iteration\"></td>\n        <td width=\"25%\" id=\"xl1\"></td>\n        <td width=\"25%\" id=\"xr1\"></td>\n        <td width=\"30%\" id=\"x\"></td>\n        <td width=\"30%\" id=\"error\"></td>\n      </tr>\n      </table>\n    </div>\n    \n  );\n}\n}\n"]},"metadata":{},"sourceType":"module"}