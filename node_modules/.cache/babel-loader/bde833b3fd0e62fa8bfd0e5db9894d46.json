{"ast":null,"code":"var _jsxFileName = \"C:\\\\numer_site\\\\src\\\\components\\\\Bisection.js\";\nimport React, { useState, Component } from 'react';\nimport * as math from 'mathjs';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [equation, setEquation] = useState(\"\");\nconst [btnState, setBtnState] = useState(0);\nvar [xl, setXL] = useState();\nvar [xr, setXR] = useState();\n\nconst handleSubmit = e => {\n  if (btnState === 0) {\n    e.preventDefault();\n\n    function bisection() {}\n\n    ;\n    setBtnState(1);\n  }\n};\n\nexport default class Bisection extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.bisection = () => {\n      let table = document.getElementById(\"output\");\n      var xm = 0;\n      var n = 0;\n      var check = parseFloat(0.0000000);\n\n      do {\n        xm = findxm(xl, xr);\n        console.log(check); //error\n\n        n++;\n        console.log(n);\n\n        if (funcal(xl) * funcal(xm) > 0) {\n          check = Math.abs((xm - xl) / xm).toFixed(8);\n          xl = xm;\n        } else {\n          check = Math.abs((xm - xr) / xm).toFixed(8);\n          xr = xm;\n        } // Create an empty <tr> element and add it to the 1st position of the table:\n\n\n        let row = table.insertRow(n); // Insert new cells (<td> elements) at the 1st and 2nd position of the \"new\" <tr> element:\n\n        var cell1 = row.insertCell(0);\n        var cell2 = row.insertCell(1);\n        var cell3 = row.insertCell(2);\n        var cell4 = row.insertCell(3);\n        var cell5 = row.insertCell(4); // Add some text to the new cells:\n\n        cell1.innerHTML = n;\n        cell2.innerHTML = xl;\n        cell3.innerHTML = xr;\n        cell4.innerHTML = xm;\n        cell5.innerHTML = check;\n      } while (check > 0.000001);\n    };\n\n    this.findxm = (xl, xr) => {\n      return (parseFloat(xl) + parseFloat(xr)) / 2;\n    };\n\n    this.funcal = X => {\n      const expression = equation;\n      const expr = math.compile(expression);\n      let scope = {\n        x: parseFloat(X)\n      };\n      return expr.evaluate(scope);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Equation : \", equation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n          children: \"L\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this), \" : \", xl]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n          children: \"R\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this), \" : \", xr]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Equation :\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: equation,\n            onChange: e => setEquation(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n            children: \"L\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 10\n          }, this), \" :\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: xl,\n            onChange: e => setXL(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n            children: \"R\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 10\n          }, this), \" :\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: xr,\n            onChange: e => setXR(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 7\n        }, this), btnState === 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: btnState,\n          value: \"Submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 26\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !btnState,\n          value: \"Submit\",\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 101\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"output\",\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            width: \"20%\",\n            children: \"Iteration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            width: \"25%\",\n            children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"L\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            width: \"25%\",\n            children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"R\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            width: \"30%\",\n            children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"M\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            width: \"30%\",\n            children: \"Error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          class: \"list-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            width: \"20%\",\n            id: \"Iteration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            width: \"25%\",\n            id: \"xl1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            width: \"25%\",\n            id: \"xr1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            width: \"30%\",\n            id: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            width: \"30%\",\n            id: \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/numer_site/src/components/Bisection.js"],"names":["React","useState","Component","math","equation","setEquation","btnState","setBtnState","xl","setXL","xr","setXR","handleSubmit","e","preventDefault","bisection","Bisection","table","document","getElementById","xm","n","check","parseFloat","findxm","console","log","funcal","Math","abs","toFixed","row","insertRow","cell1","insertCell","cell2","cell3","cell4","cell5","innerHTML","X","expression","expr","compile","scope","x","evaluate","render","target","value"],"mappings":"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","sourcesContent":["import React, { useState, Component }  from 'react';\nimport * as math from 'mathjs';\nimport '../App.css';\n\n\n\n\nconst [equation, setEquation] = useState(\"\");\nconst [btnState, setBtnState] = useState(0);\nvar [xl, setXL] = useState();\nvar [xr, setXR] = useState();\n\n\nconst handleSubmit = (e) => {\n  if(btnState === 0)\n  {\n    e.preventDefault();\n    function bisection(){};\n    setBtnState(1);\n  }\n};\nexport default class Bisection extends Component {\n\n\n  bisection = () => {\n    let table = document.getElementById(\"output\");\n    var xm = 0;\n    var n = 0;\n    var check = parseFloat(0.0000000);\n    do{\n      xm = findxm(xl,xr);\n      console.log(check);//error\n      n++;\n      console.log(n);\n      if(funcal(xl)*funcal(xm)>0) {\n        check=Math.abs((xm-xl)/xm).toFixed(8);\n        xl=xm;\n      }\n      else {\n        check=Math.abs((xm-xr)/xm).toFixed(8);\n        xr=xm;\n      }\n      // Create an empty <tr> element and add it to the 1st position of the table:\n      let row = table.insertRow(n);\n  \n      // Insert new cells (<td> elements) at the 1st and 2nd position of the \"new\" <tr> element:\n      var cell1 = row.insertCell(0);\n      var cell2 = row.insertCell(1);\n      var cell3 = row.insertCell(2);\n      var cell4 = row.insertCell(3);\n      var cell5 = row.insertCell(4);\n  \n      // Add some text to the new cells:\n      cell1.innerHTML = n;\n      cell2.innerHTML = xl;\n      cell3.innerHTML = xr;\n      cell4.innerHTML = xm;\n      cell5.innerHTML = check;\n    }while(check>0.000001)\n  }\n  //หาXm ปกติ\n findxm = (xl,xr) => {\n    return (parseFloat(xl)+parseFloat(xr))/2\n  }\n  \n  // แก้สมาการ X ใช้ไลบรารี่แมทจ้าา\n funcal = (X) => {\n    const expression = equation;\n    const expr = math.compile(expression);\n    let scope = {x:parseFloat(X)};\n    return expr.evaluate(scope);\n  }\n\n  render(){\n    return (\n    \n    <div>  \n    <p>Equation : {equation}</p>\n    <p>X<sub>L</sub> : {xl}</p>\n    <p>X<sub>R</sub> : {xr}</p>\n      <form onSubmit={handleSubmit}>\n      <label>\n        Equation :\n        <input type=\"text\" value={equation} onChange={e => setEquation(e.target.value)}\n        />\n      </label>\n      <br></br>\n      <label>\n        X<sub>L</sub> :\n        <input type=\"text\" value={xl} onChange={e => setXL(e.target.value)}\n        />\n      </label>\n      <br></br>\n      <label>\n        X<sub>R</sub> :\n        <input type=\"text\" value={xr} onChange={e => setXR(e.target.value)}/>\n      </label>\n      <br></br> \n      {btnState === 0  ? <button type=\"submit\" disabled={btnState} value=\"Submit\">Submit</button> : <button type=\"submit\" disabled={!btnState} value=\"Submit\">Reset</button> }\n\n    </form>\n\n    <table id=\"output\">\n      <tr>\n        <th width=\"20%\">Iteration</th>\n        <th width=\"25%\">X<sub>L</sub></th>\n        <th width=\"25%\">X<sub>R</sub></th>\n        <th width=\"30%\">X<sub>M</sub></th>\n        <th width=\"30%\">Error</th>\n      </tr>\n      <tr class=\"list-data\">\n        <td width=\"20%\" id=\"Iteration\"></td>\n        <td width=\"25%\" id=\"xl1\"></td>\n        <td width=\"25%\" id=\"xr1\"></td>\n        <td width=\"30%\" id=\"x\"></td>\n        <td width=\"30%\" id=\"error\"></td>\n      </tr>\n      </table>\n    </div>\n    \n  );\n}\n}"]},"metadata":{},"sourceType":"module"}