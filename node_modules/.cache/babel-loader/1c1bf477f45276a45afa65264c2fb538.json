{"ast":null,"code":"var _jsxFileName = \"C:\\\\numer_site\\\\src\\\\components\\\\Bisection.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport * as math from 'mathjs';\nimport '../App.css';\nimport Topbar from './Topbar';\nimport { Container } from 'react-bootstrap';\nimport api from '../api/bisection';\nimport { Button, Table } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Bisection() {\n  _s();\n\n  const [equation, setEquation] = useState(\"\");\n  const [btnState, setBtnState] = useState(0);\n  var [xl, setXL] = useState();\n  var [xr, setXR] = useState();\n\n  const handleSubmit = e => {\n    if (btnState === 0) {\n      e.preventDefault();\n      bisection();\n      setBtnState(1);\n    }\n  };\n\n  const bisection = () => {\n    let table = document.getElementById(\"output\");\n    var xm = 0;\n    var n = 0;\n    var check = parseFloat(0.0000000);\n\n    do {\n      xm = findxm(xl, xr);\n      console.log(check); //error\n\n      n++;\n      console.log(n);\n\n      if (funcal(xl) * funcal(xm) > 0) {\n        check = Math.abs((xm - xl) / xm).toFixed(8);\n        xl = xm;\n      } else {\n        check = Math.abs((xm - xr) / xm).toFixed(8);\n        xr = xm;\n      } // Create an empty <tr> element and add it to the 1st position of the table:\n\n\n      let row = table.insertRow(n); // Insert new cells (<td> elements) at the 1st and 2nd position of the \"new\" <tr> element:\n\n      var cell1 = row.insertCell(0);\n      var cell2 = row.insertCell(1);\n      var cell3 = row.insertCell(2);\n      var cell4 = row.insertCell(3);\n      var cell5 = row.insertCell(4); // Add some text to the new cells:\n\n      cell1.innerHTML = n;\n      cell2.innerHTML = xl;\n      cell3.innerHTML = xr;\n      cell4.innerHTML = xm;\n      cell5.innerHTML = check;\n    } while (check > 0.000001);\n  }; //หาXm ปกติ\n\n\n  const findxm = (xl, xr) => {\n    return (parseFloat(xl) + parseFloat(xr)) / 2;\n  }; // แก้สมาการ X ใช้ไลบรารี่แมทจ้าา\n\n\n  const funcal = X => {\n    const expression = equation;\n    const expr = math.compile(expression);\n    let scope = {\n      x: parseFloat(X)\n    };\n    return expr.evaluate(scope);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Equation : \", equation]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n            children: \"L\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 19\n          }, this), \" : \", xl]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n            children: \"R\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 19\n          }, this), \" : \", xr]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Equation :\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: equation,\n              onChange: e => setEquation(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"L\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 22\n            }, this), \" :\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: xl,\n              onChange: e => setXL(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"R\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 22\n            }, this), \" :\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: xr,\n              onChange: e => setXR(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 19\n          }, this), btnState === 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: btnState,\n            value: \"Submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 38\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: !btnState,\n            value: \"Submit\",\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 113\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        text: true,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            id: \"output\",\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                width: \"20%\",\n                children: \"Iteration\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                width: \"25%\",\n                children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"L\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 34\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                width: \"25%\",\n                children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"R\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 34\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                width: \"30%\",\n                children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"M\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 34\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                width: \"30%\",\n                children: \"Error\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              class: \"list-data\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                width: \"20%\",\n                id: \"Iteration\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                width: \"25%\",\n                id: \"xl1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                width: \"25%\",\n                id: \"xr1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                width: \"30%\",\n                id: \"x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                width: \"30%\",\n                id: \"error\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Bisection, \"98wCyGXa4NFqhWXfV+AmblWHJ1c=\");\n\n_c = Bisection;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bisection\");","map":{"version":3,"sources":["C:/numer_site/src/components/Bisection.js"],"names":["React","useState","useEffect","math","Topbar","Container","api","Button","Table","Bisection","equation","setEquation","btnState","setBtnState","xl","setXL","xr","setXR","handleSubmit","e","preventDefault","bisection","table","document","getElementById","xm","n","check","parseFloat","findxm","console","log","funcal","Math","abs","toFixed","row","insertRow","cell1","insertCell","cell2","cell3","cell4","cell5","innerHTML","X","expression","expr","compile","scope","x","evaluate","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as math from 'mathjs';\nimport '../App.css';\nimport Topbar from './Topbar';\nimport { Container } from 'react-bootstrap';\nimport api from '../api/bisection';\nimport {Button, Table} from 'antd';\n\nexport default function Bisection(){\n  const [equation, setEquation] = useState(\"\");\n  const [btnState, setBtnState] = useState(0);\n  var [xl, setXL] = useState();\n  var [xr, setXR] = useState();\n\n  const handleSubmit = (e) => {\n    if(btnState === 0)\n    {\n      e.preventDefault();\n      bisection();\n      setBtnState(1);\n    }\n  };\n  const bisection = () => {\n    let table = document.getElementById(\"output\");\n    var xm = 0;\n    var n = 0;\n    var check = parseFloat(0.0000000);\n    do{\n      xm = findxm(xl,xr);\n      console.log(check);//error\n      n++;\n      console.log(n);\n      if(funcal(xl)*funcal(xm)>0) {\n        check=Math.abs((xm-xl)/xm).toFixed(8);\n        xl=xm;\n      }\n      else {\n        check=Math.abs((xm-xr)/xm).toFixed(8);\n        xr=xm;\n      }\n      // Create an empty <tr> element and add it to the 1st position of the table:\n      let row = table.insertRow(n);\n  \n      // Insert new cells (<td> elements) at the 1st and 2nd position of the \"new\" <tr> element:\n      var cell1 = row.insertCell(0);\n      var cell2 = row.insertCell(1);\n      var cell3 = row.insertCell(2);\n      var cell4 = row.insertCell(3);\n      var cell5 = row.insertCell(4);\n  \n      // Add some text to the new cells:\n      cell1.innerHTML = n;\n      cell2.innerHTML = xl;\n      cell3.innerHTML = xr;\n      cell4.innerHTML = xm;\n      cell5.innerHTML = check;\n\n    }while(check>0.000001)\n  }\n  //หาXm ปกติ\n  const findxm = (xl,xr) => {\n    return (parseFloat(xl)+parseFloat(xr))/2\n  }\n  \n  // แก้สมาการ X ใช้ไลบรารี่แมทจ้าา\n  const funcal = (X) => {\n    const expression = equation;\n    const expr = math.compile(expression);\n    let scope = {x:parseFloat(X)};\n    return expr.evaluate(scope);\n  }\n  \n  return (\n    \n    <div>\n      <div><Topbar/></div>\n    \n            <div>\n              <Container>  \n              <p>Equation : {equation}</p>\n              <p>X<sub>L</sub> : {xl}</p>\n              <p>X<sub>R</sub> : {xr}</p>\n\n\n              <form onSubmit={handleSubmit}>\n                  <label>\n                    Equation :\n                    <input type=\"text\" value={equation} onChange={e => setEquation(e.target.value)}\n                    />\n                  </label>\n                  <br></br>\n                  <label>\n                    X<sub>L</sub> :\n                    <input type=\"text\" value={xl} onChange={e => setXL(e.target.value)}\n                    />\n                  </label>\n                  <br></br>\n                  <label>\n                    X<sub>R</sub> :\n                    <input type=\"text\" value={xr} onChange={e => setXR(e.target.value)}/>\n                  </label>\n                  <br></br> \n                  {btnState === 0  ? <button type=\"submit\" disabled={btnState} value=\"Submit\">Submit</button> : <button type=\"submit\" disabled={!btnState} value=\"Submit\">Reset</button> }\n\n              </form>\n        <br></br><br></br>\n        </Container>\n          <Container text> \n          <div>\n           <table id=\"output\">\n              <tr>\n                <th width=\"20%\">Iteration</th>\n                <th width=\"25%\">X<sub>L</sub></th>\n                <th width=\"25%\">X<sub>R</sub></th>\n                <th width=\"30%\">X<sub>M</sub></th>\n                <th width=\"30%\">Error</th>\n              </tr>\n              <tr class=\"list-data\">\n                <td width=\"20%\" id=\"Iteration\"></td>\n                <td width=\"25%\" id=\"xl1\"></td>\n                <td width=\"25%\" id=\"xr1\"></td>\n                <td width=\"30%\" id=\"x\"></td>\n                <td width=\"30%\" id=\"error\"></td>\n              </tr>\n            </table>\n          </div>\n          </Container> \n          \n      </div>\n      \n    </div>\n  );\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}