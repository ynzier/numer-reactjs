{"ast":null,"code":"var _jsxFileName = \"C:\\\\numer_site\\\\src\\\\components\\\\Bisection.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport * as math from 'mathjs';\nimport 'App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [equation, setEquation] = useState(\"\");\n  const [btnState, setBtnState] = useState(0);\n  var [xl, setXL] = useState();\n  var [xr, setXR] = useState(); // useEffect(() => {\n  //   document.title = You clicked ${xl} times;\n  // });\n\n  const handleSubmit = e => {\n    if (btnState === 0) {\n      e.preventDefault();\n      bisection();\n      setBtnState(1);\n    }\n  };\n\n  const bisection = () => {\n    let table = document.getElementById(\"output\");\n    var xm = 0;\n    var n = 0;\n    var check = parseFloat(0.0000000);\n\n    do {\n      xm = findxm(xl, xr);\n      console.log(check); //error\n\n      n++;\n      console.log(n);\n\n      if (funcal(xl) * funcal(xm) > 0) {\n        check = Math.abs((xm - xl) / xm).toFixed(8);\n        xl = xm;\n      } else {\n        check = Math.abs((xm - xr) / xm).toFixed(8);\n        xr = xm;\n      } // Create an empty <tr> element and add it to the 1st position of the table:\n\n\n      let row = table.insertRow(n); // Insert new cells (<td> elements) at the 1st and 2nd position of the \"new\" <tr> element:\n\n      var cell1 = row.insertCell(0);\n      var cell2 = row.insertCell(1);\n      var cell3 = row.insertCell(2);\n      var cell4 = row.insertCell(3);\n      var cell5 = row.insertCell(4); // Add some text to the new cells:\n\n      cell1.innerHTML = n;\n      cell2.innerHTML = xl;\n      cell3.innerHTML = xr;\n      cell4.innerHTML = xm;\n      cell5.innerHTML = check;\n    } while (check > 0.000001);\n  }; //หาXm ปกติ\n\n\n  const findxm = (xl, xr) => {\n    return (parseFloat(xl) + parseFloat(xr)) / 2;\n  }; // แก้สมาการ X ใช้ไลบรารี่แมทจ้าา\n\n\n  const funcal = X => {\n    const expression = equation;\n    const expr = math.compile(expression);\n    let scope = {\n      x: parseFloat(X)\n    };\n    return expr.evaluate(scope);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Equation : \", equation]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n        children: \"L\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), \" : \", xl]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n        children: \"R\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), \" : \", xr]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Equation :\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: equation,\n          onChange: e => setEquation(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n          children: \"L\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 10\n        }, this), \" :\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: xl,\n          onChange: e => setXL(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n          children: \"R\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 10\n        }, this), \" :\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: xr,\n          onChange: e => setXR(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }, this), btnState === 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: btnState,\n        value: \"Submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 26\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !btnState,\n        value: \"Submit\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 101\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      id: \"output\",\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          width: \"20%\",\n          children: \"Iteration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          width: \"25%\",\n          children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n            children: \"L\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          width: \"25%\",\n          children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n            children: \"R\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          width: \"30%\",\n          children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n            children: \"M\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          width: \"30%\",\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        class: \"list-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          width: \"20%\",\n          id: \"Iteration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          width: \"25%\",\n          id: \"xl1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          width: \"25%\",\n          id: \"xr1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          width: \"30%\",\n          id: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          width: \"30%\",\n          id: \"error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"98wCyGXa4NFqhWXfV+AmblWHJ1c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/numer_site/src/components/Bisection.js"],"names":["React","useState","useEffect","math","App","equation","setEquation","btnState","setBtnState","xl","setXL","xr","setXR","handleSubmit","e","preventDefault","bisection","table","document","getElementById","xm","n","check","parseFloat","findxm","console","log","funcal","Math","abs","toFixed","row","insertRow","cell1","insertCell","cell2","cell3","cell4","cell5","innerHTML","X","expression","expr","compile","scope","x","evaluate","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as math from 'mathjs';\nimport 'App.css';\n\nfunction App() {\n  const [equation, setEquation] = useState(\"\");\n  const [btnState, setBtnState] = useState(0);\n  var [xl, setXL] = useState();\n  var [xr, setXR] = useState();\n\n  // useEffect(() => {\n  //   document.title = You clicked ${xl} times;\n  // });\n\n  const handleSubmit = (e) => {\n    if(btnState === 0)\n    {\n      e.preventDefault();\n      bisection();\n      setBtnState(1);\n    }\n  };\n\n  const bisection = () => {\n    let table = document.getElementById(\"output\");\n    var xm = 0;\n    var n = 0;\n    var check = parseFloat(0.0000000);\n    do{\n      xm = findxm(xl,xr);\n      console.log(check);//error\n      n++;\n      console.log(n);\n      if(funcal(xl)*funcal(xm)>0) {\n        check=Math.abs((xm-xl)/xm).toFixed(8);\n        xl=xm;\n      }\n      else {\n        check=Math.abs((xm-xr)/xm).toFixed(8);\n        xr=xm;\n      }\n      // Create an empty <tr> element and add it to the 1st position of the table:\n      let row = table.insertRow(n);\n  \n      // Insert new cells (<td> elements) at the 1st and 2nd position of the \"new\" <tr> element:\n      var cell1 = row.insertCell(0);\n      var cell2 = row.insertCell(1);\n      var cell3 = row.insertCell(2);\n      var cell4 = row.insertCell(3);\n      var cell5 = row.insertCell(4);\n  \n      // Add some text to the new cells:\n      cell1.innerHTML = n;\n      cell2.innerHTML = xl;\n      cell3.innerHTML = xr;\n      cell4.innerHTML = xm;\n      cell5.innerHTML = check;\n    }while(check>0.000001)\n  }\n  //หาXm ปกติ\n  const findxm = (xl,xr) => {\n    return (parseFloat(xl)+parseFloat(xr))/2\n  }\n  \n  // แก้สมาการ X ใช้ไลบรารี่แมทจ้าา\n  const funcal = (X) => {\n    const expression = equation;\n    const expr = math.compile(expression);\n    let scope = {x:parseFloat(X)};\n    return expr.evaluate(scope);\n  }\n\n\n  return (\n    \n    <div>  \n    <p>Equation : {equation}</p>\n    <p>X<sub>L</sub> : {xl}</p>\n    <p>X<sub>R</sub> : {xr}</p>\n      <form onSubmit={handleSubmit}>\n      <label>\n        Equation :\n        <input type=\"text\" value={equation} onChange={e => setEquation(e.target.value)}\n        />\n      </label>\n      <br></br>\n      <label>\n        X<sub>L</sub> :\n        <input type=\"text\" value={xl} onChange={e => setXL(e.target.value)}\n        />\n      </label>\n      <br></br>\n      <label>\n        X<sub>R</sub> :\n        <input type=\"text\" value={xr} onChange={e => setXR(e.target.value)}/>\n      </label>\n      <br></br> \n      {btnState === 0  ? <button type=\"submit\" disabled={btnState} value=\"Submit\">Submit</button> : <button type=\"submit\" disabled={!btnState} value=\"Submit\">Reset</button> }\n\n    </form>\n\n    <table id=\"output\">\n      <tr>\n        <th width=\"20%\">Iteration</th>\n        <th width=\"25%\">X<sub>L</sub></th>\n        <th width=\"25%\">X<sub>R</sub></th>\n        <th width=\"30%\">X<sub>M</sub></th>\n        <th width=\"30%\">Error</th>\n      </tr>\n      <tr class=\"list-data\">\n        <td width=\"20%\" id=\"Iteration\"></td>\n        <td width=\"25%\" id=\"xl1\"></td>\n        <td width=\"25%\" id=\"xr1\"></td>\n        <td width=\"30%\" id=\"x\"></td>\n        <td width=\"30%\" id=\"error\"></td>\n      </tr>\n      </table>\n    </div>\n    \n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}