{"ast":null,"code":"var _jsxFileName = \"C:\\\\numer_site\\\\src\\\\components\\\\Bisection.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { Table } from 'antd';\nimport '../App.css';\nimport Topbar from './Topbar';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst header = [{\n  title: 'Iteration',\n  dataIndex: 'iteration',\n  key: 'iteration',\n  width: 50\n}, {\n  title: 'Xl',\n  dataIndex: 'xl',\n  width: 300\n}, {\n  title: 'Xr',\n  dataIndex: 'xr',\n  width: 300\n}, {\n  title: 'Xm',\n  dataIndex: 'xm',\n  width: 300\n}, {\n  title: 'Error',\n  dataIndex: 'Error',\n  width: 300\n}];\nexport default function Bisection() {\n  _s();\n\n  const [equation, setEquation] = useState(\"\");\n  const [btnState, setBtnState] = useState(0);\n  let [xl, setXL] = useState(0);\n  let [xr, setXR] = useState(0);\n  const [result, setResultArr] = useState([]);\n\n  const handleSubmit = e => {\n    if (btnState === 0) {\n      e.preventDefault();\n      bisection();\n      console.log(result.key);\n      setBtnState(1);\n    }\n  };\n\n  const bisection = () => {\n    Axios.post(\"http://localhost:5000/api/BisectionAPI\", {\n      xl: parseFloat(xl),\n      xr: parseFloat(xr),\n      equation: equation\n    }).then(res => {\n      console.log(res.data.tmpArr);\n      setResultArr([result, res.data.tmpArr]);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Bisection Method\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Equation :\", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\xA0\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 28\n          }, this), equation]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n            children: \"L\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 19\n          }, this), \" :\", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\xA0\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 33\n          }, this), xl]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n            children: \"R\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 19\n          }, this), \" :\", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\xA0\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 33\n          }, this), xr]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Equation :\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\xA0\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: equation,\n              onChange: e => setEquation(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"L\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 22\n            }, this), \" :\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\xA0\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 36\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: xl,\n              onChange: e => setXL(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"R\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 22\n            }, this), \" :\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\xA0\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 36\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: xr,\n              onChange: e => setXR(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 19\n          }, this), btnState === 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: btnState,\n            value: \"Submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: !btnState,\n            value: \"Submit\",\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: Object.keys(result[0]).map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: key\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this))\n            }, \"header\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: Object.keys(state[0]).map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: key\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 11\n                }, this))\n              }, \"header\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 7\n              }, this), state.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: Object.values(item).map(val => /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: val\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 13\n                }, this))\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 9\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 14\n            }, this).map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: Object.values(item).map(val => /*#__PURE__*/_jsxDEV(\"td\", {\n                children: val\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 19\n              }, this))\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            dataSource: result,\n            columns: header,\n            rowKey: result,\n            pagination: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Bisection, \"Y2VauQbG26P31K7zgXo3MDJbAIk=\");\n\n_c = Bisection;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bisection\");","map":{"version":3,"sources":["C:/numer_site/src/components/Bisection.js"],"names":["React","useState","Container","Table","Topbar","Axios","header","title","dataIndex","key","width","Bisection","equation","setEquation","btnState","setBtnState","xl","setXL","xr","setXR","result","setResultArr","handleSubmit","e","preventDefault","bisection","console","log","post","parseFloat","then","res","data","tmpArr","catch","err","target","value","Object","keys","map","state","item","values","val","id"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { Table } from 'antd';\n\nimport '../App.css';\n\nimport Topbar from './Topbar';\nimport Axios from 'axios';\n\n\n\n\nconst header = [\n{\n  title: 'Iteration',\n  dataIndex: 'iteration',\n  key: 'iteration',\n  width: 50,\n  \n\n}, {\n  title: 'Xl',\n  dataIndex: 'xl',\n  width: 300,\n\n\n}, {\n  title: 'Xr',\n  dataIndex: 'xr',\n  width: 300,\n\n}, {\n  title: 'Xm',\n  dataIndex: 'xm',\n  width: 300,\n\n}, {\n  title: 'Error',\n  dataIndex: 'Error',\n  width: 300,\n\n}]\n\n\n\nexport default function Bisection(){\n  const [equation, setEquation] = useState(\"\");\n  const [btnState, setBtnState] = useState(0);\n  let [xl, setXL] = useState(0);\n  let [xr, setXR] = useState(0);\n  const[result,setResultArr] = useState([]);\n\n\n  const handleSubmit = (e) => {\n    if(btnState === 0)\n    {\n      e.preventDefault();\n      bisection();\n      console.log(result.key);\n      setBtnState(1);\n    }\n  };\n  \n  const bisection = () => {\n\n    Axios\n    .post(\"http://localhost:5000/api/BisectionAPI\", {\n      xl: parseFloat(xl),\n      xr: parseFloat(xr),\n      equation: equation,\n    })\n    .then(res => {\n      console.log(res.data.tmpArr);\n      setResultArr([result,res.data.tmpArr]);\n\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  }\n\n\n  return (\n    <div>\n      <div><Topbar/></div>\n      <p></p>\n            <div>\n            <Container>  \n              <h1>Bisection Method</h1>\n              <p>Equation :<span>&nbsp;&nbsp;</span>{equation}</p>\n              <p>X<sub>L</sub> :<span>&nbsp;&nbsp;</span>{xl}</p>\n              <p>X<sub>R</sub> :<span>&nbsp;&nbsp;</span>{xr}</p>\n\n\n              <form onSubmit={handleSubmit}>\n                  <label>\n                    Equation :<span>&nbsp;&nbsp;</span>\n                    <input type=\"text\" value={equation} onChange={e => setEquation(e.target.value)}\n                    />\n                  </label>\n                  <p></p>\n                  <label>\n                    X<sub>L</sub> :<span>&nbsp;&nbsp;</span>\n                    <input type=\"text\" value={xl} onChange={e => setXL(e.target.value)}\n                    />\n                  </label>\n                  <p></p>\n                  <label>\n                    X<sub>R</sub> :<span>&nbsp;&nbsp;</span>\n                    <input type=\"text\" value={xr} onChange={e => setXR(e.target.value)}/>\n                  </label>\n                  <p></p>\n\n                  {btnState === 0  ? \n                  <button type=\"submit\" disabled={btnState} value=\"Submit\">Submit</button> :\n                  <button type=\"submit\" disabled={!btnState} value=\"Submit\">Reset</button> }\n                </form>\n                <p></p><p></p>\n\n            \n            <div>\n\n\n            <table>\n            <tr key={\"header\"}>\n              {Object.keys(result[0]).map((key) => (\n                <th>{key}</th>\n              ))}\n            </tr>\n            {<table>\n      <tr key={\"header\"}>\n        {Object.keys(state[0]).map((key) => (\n          <th>{key}</th>\n        ))}\n      </tr>\n      {state.map((item) => (\n        <tr key={item.id}>\n          {Object.values(item).map((val) => (\n            <td>{val}</td>\n          ))}\n        </tr>\n      ))}\n    </table>.map((item) => (\n              <tr key={item.id}>\n                {Object.values(item).map((val) => (\n                  <td>{val}</td>\n                ))}\n              </tr>\n            ))}\n          </table>\n\n\n\n            {<Table dataSource={result} columns={header} rowKey={result}  pagination={false}/>}\n\n            </div>\n          </Container>\n\n      </div>\n      \n    </div>\n  );\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}