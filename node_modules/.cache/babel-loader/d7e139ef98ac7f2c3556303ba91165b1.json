{"ast":null,"code":"const express = require(\"express\"),\n      app = express(),\n      port = process.env.PORT || 5000,\n      cors = require(\"cors\");\n/*export default function BisectionAPI(){\r\n  console.log('Bisec API')\r\n  var xl = parseFloat(req.body.xl);\r\n  var xr = parseFloat(req.body.xr);\r\n  const equation = math.compile(req.body.equation);\r\n  var xm = 0;\r\n  var check = parseFloat(0.0000000);\r\n  var n=0;\r\n  var tmpArr = [];\r\n\r\n  do{   \r\n      xm = findxm(xl,xr);\r\n      \r\n      console.log(check);//error\r\n      n++;\r\n      console.log(n);\r\n      if(funcal(xl)*funcal(xm)>0) {\r\n        check=Math.abs((xm-xl)/xm).toFixed(8);\r\n        xl = (xm);\r\n      }\r\n      else {\r\n        check=Math.abs((xm-xr)/xm).toFixed(8);\r\n        xr = (xm);\r\n      }\r\n      console.log('iteration: ' ,n, ' Xl: ',xl,' XR: ',xr,' XM: ',xm);\r\n\r\n      tmpArr.push({\r\n        'iteration': n,\r\n        'xl': xl,\r\n        'xr': xr,\r\n        'xm': xm,\r\n        'Error': check,\r\n      });\r\n      \r\n    }while(check>0.000001 || n<20)\r\n\r\n\r\n    const findxm = (xl,xr) => {\r\n      return (parseFloat(xl)+parseFloat(xr))/2\r\n    }\r\n    const funcal = (X) => {\r\n      const expression = equation;\r\n      const expr = math.compile(expression);\r\n      let scope = {x:parseFloat(X)};\r\n      return expr.evaluate(scope);\r\n    }\r\n\r\n    res.json({\r\n      tmpArr: tmpArr\r\n  })\r\n\r\n\r\n\r\n  }*/","map":{"version":3,"sources":["C:/numer_site/src/api/BisectionAPI.js"],"names":["express","require","app","port","process","env","PORT","cors"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;AAAA,MACEC,GAAG,GAAGF,OAAO,EADf;AAAA,MAEEG,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAF7B;AAAA,MAGEC,IAAI,GAAGN,OAAO,CAAC,MAAD,CAHhB;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["const express = require(\"express\"),\r\n  app = express(),\r\n  port = process.env.PORT || 5000,\r\n  cors = require(\"cors\");\r\n\r\n\r\n  \r\n/*export default function BisectionAPI(){\r\n  console.log('Bisec API')\r\n  var xl = parseFloat(req.body.xl);\r\n  var xr = parseFloat(req.body.xr);\r\n  const equation = math.compile(req.body.equation);\r\n  var xm = 0;\r\n  var check = parseFloat(0.0000000);\r\n  var n=0;\r\n  var tmpArr = [];\r\n\r\n  do{   \r\n      xm = findxm(xl,xr);\r\n      \r\n      console.log(check);//error\r\n      n++;\r\n      console.log(n);\r\n      if(funcal(xl)*funcal(xm)>0) {\r\n        check=Math.abs((xm-xl)/xm).toFixed(8);\r\n        xl = (xm);\r\n      }\r\n      else {\r\n        check=Math.abs((xm-xr)/xm).toFixed(8);\r\n        xr = (xm);\r\n      }\r\n      console.log('iteration: ' ,n, ' Xl: ',xl,' XR: ',xr,' XM: ',xm);\r\n\r\n      tmpArr.push({\r\n        'iteration': n,\r\n        'xl': xl,\r\n        'xr': xr,\r\n        'xm': xm,\r\n        'Error': check,\r\n      });\r\n      \r\n    }while(check>0.000001 || n<20)\r\n\r\n\r\n    const findxm = (xl,xr) => {\r\n      return (parseFloat(xl)+parseFloat(xr))/2\r\n    }\r\n    const funcal = (X) => {\r\n      const expression = equation;\r\n      const expr = math.compile(expression);\r\n      let scope = {x:parseFloat(X)};\r\n      return expr.evaluate(scope);\r\n    }\r\n\r\n    res.json({\r\n      tmpArr: tmpArr\r\n  })\r\n\r\n\r\n\r\n  }*/\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}