{"ast":null,"code":"var _jsxFileName = \"C:\\\\numer_site\\\\src\\\\components\\\\Bisection.js\";\nimport React, { useState, useEffect, Component } from 'react';\nimport * as math from 'mathjs';\nimport '../App.css';\nimport Topbar from './Topbar';\nimport { Container } from 'react-bootstrap';\nimport { XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines, LineSeries } from 'react-vis';\nimport { render } from '@testing-library/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Bisection extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      equation: '',\n      btnState: false,\n      xl: 0,\n      xr: 0\n    };\n\n    this.handleFormChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.setEquation = e => {\n      const {\n        equation,\n        value\n      } = e.target;\n      this.setState({\n        [equation]: value\n      });\n    };\n\n    this.setBtnState = e => {\n      this.setState({\n        btnState: e.target.value\n      });\n    };\n\n    this.setXL = e => {\n      this.setState({\n        xl: e.target.value\n      });\n    };\n\n    this.setXR = e => {\n      this.setState({\n        xr: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      if (btnState === 0) {\n        e.preventDefault();\n        bisection();\n        setBtnState(1);\n      }\n    };\n\n    this.bisection = () => {\n      let table = document.getElementById(\"output\");\n      var xm = 0;\n      var n = 0;\n      var check = parseFloat(0.0000000);\n\n      do {\n        xm = findxm(xl, xr);\n        console.log(check); //error\n\n        n++;\n        console.log(n);\n\n        if (funcal(xl) * funcal(xm) > 0) {\n          check = Math.abs((xm - xl) / xm).toFixed(8);\n          xl = xm;\n        } else {\n          check = Math.abs((xm - xr) / xm).toFixed(8);\n          xr = xm;\n        } // Create an empty <tr> element and add it to the 1st position of the table:\n\n\n        let row = table.insertRow(n); // Insert new cells (<td> elements) at the 1st and 2nd position of the \"new\" <tr> element:\n\n        var cell1 = row.insertCell(0);\n        var cell2 = row.insertCell(1);\n        var cell3 = row.insertCell(2);\n        var cell4 = row.insertCell(3);\n        var cell5 = row.insertCell(4); // Add some text to the new cells:\n\n        cell1.innerHTML = n;\n        cell2.innerHTML = xl;\n        cell3.innerHTML = xr;\n        cell4.innerHTML = xm;\n        cell5.innerHTML = check;\n      } while (check > 0.000001);\n    };\n\n    this.findxm = (xl, xr) => {\n      return (parseFloat(xl) + parseFloat(xr)) / 2;\n    };\n\n    this.funcal = X => {\n      const expression = equation;\n      const expr = math.compile(expression);\n      let scope = {\n        x: parseFloat(X)\n      };\n      return expr.evaluate(scope);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Equation : \", equation]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"L\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 13\n            }, this), \" : \", xl]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"R\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 13\n            }, this), \" : \", xr]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Equation :\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: equation,\n                onChange: this.setEquation\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"L\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 16\n              }, this), \" :\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: xl,\n                onChange: this.setXL\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"R\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 16\n              }, this), \" :\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: xr,\n                onChange: this.setXR\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 13\n            }, this), btnState === 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: btnState,\n              value: \"Submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 32\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: !btnState,\n              value: \"Submit\",\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 107\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          text: true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              id: \"output\",\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  width: \"20%\",\n                  children: \"Iteration\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  width: \"25%\",\n                  children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                    children: \"L\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 34\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  width: \"25%\",\n                  children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                    children: \"R\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 34\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  width: \"30%\",\n                  children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                    children: \"M\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 34\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  width: \"30%\",\n                  children: \"Error\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                class: \"list-data\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  width: \"20%\",\n                  id: \"Iteration\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  width: \"25%\",\n                  id: \"xl1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  width: \"25%\",\n                  id: \"xr1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  width: \"30%\",\n                  id: \"x\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  width: \"30%\",\n                  id: \"error\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 12\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default Bisection;","map":{"version":3,"sources":["C:/numer_site/src/components/Bisection.js"],"names":["React","useState","useEffect","Component","math","Topbar","Container","XYPlot","XAxis","YAxis","HorizontalGridLines","VerticalGridLines","LineSeries","render","Bisection","state","equation","btnState","xl","xr","handleFormChange","e","name","value","target","setState","setEquation","setBtnState","setXL","setXR","handleSubmit","preventDefault","bisection","table","document","getElementById","xm","n","check","parseFloat","findxm","console","log","funcal","Math","abs","toFixed","row","insertRow","cell1","insertCell","cell2","cell3","cell4","cell5","innerHTML","X","expression","expr","compile","scope","x","evaluate"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAO,KAAKC,IAAZ,MAAsB,QAAtB;AACA,OAAO,YAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,KAAvB,EAA8BC,mBAA9B,EAAmDC,iBAAnD,EAAsEC,UAAtE,QAAuF,WAAvF;AACA,SAASC,MAAT,QAAuB,wBAAvB;;;AAEA,MAAMC,SAAN,SAAwBX,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCY,KADgC,GACxB;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,QAAQ,EAAE,KAFJ;AAGNC,MAAAA,EAAE,EAAE,CAHE;AAINC,MAAAA,EAAE,EAAE;AAJE,KADwB;;AAAA,SAQhCC,gBARgC,GAQZC,CAAD,IAAO;AACxB,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkBF,CAAC,CAACG,MAA1B;AACA,WAAKC,QAAL,CAAc;AACZ,SAACH,IAAD,GAAQC;AADI,OAAd;AAGD,KAb+B;;AAAA,SAgBhCG,WAhBgC,GAgBjBL,CAAD,IAAM;AAClB,YAAM;AAACL,QAAAA,QAAD;AAAYO,QAAAA;AAAZ,UAAqBF,CAAC,CAACG,MAA7B;AACA,WAAKC,QAAL,CAAc;AACZ,SAACT,QAAD,GAAYO;AADA,OAAd;AAGD,KArB+B;;AAAA,SAuBhCI,WAvBgC,GAuBjBN,CAAD,IAAM;AAClB,WAAKI,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAEI,CAAC,CAACG,MAAF,CAASD;AADP,OAAd;AAGD,KA3B+B;;AAAA,SA6BhCK,KA7BgC,GA6BvBP,CAAD,IAAM;AACZ,WAAKI,QAAL,CAAc;AACZP,QAAAA,EAAE,EAAEG,CAAC,CAACG,MAAF,CAASD;AADD,OAAd;AAGD,KAjC+B;;AAAA,SAmChCM,KAnCgC,GAmCvBR,CAAD,IAAM;AACZ,WAAKI,QAAL,CAAc;AACZN,QAAAA,EAAE,EAAEE,CAAC,CAACG,MAAF,CAASD;AADD,OAAd;AAGD,KAvC+B;;AAAA,SAyChCO,YAzCgC,GAyChBT,CAAD,IAAO;AACpB,UAAGJ,QAAQ,KAAK,CAAhB,EACA;AACEI,QAAAA,CAAC,CAACU,cAAF;AACAC,QAAAA,SAAS;AACTL,QAAAA,WAAW,CAAC,CAAD,CAAX;AACD;AACF,KAhD+B;;AAAA,SAkDhCK,SAlDgC,GAkDpB,MAAM;AAChB,UAAIC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAZ;AACA,UAAIC,EAAE,GAAG,CAAT;AACA,UAAIC,CAAC,GAAG,CAAR;AACA,UAAIC,KAAK,GAAGC,UAAU,CAAC,SAAD,CAAtB;;AACA,SAAE;AACAH,QAAAA,EAAE,GAAGI,MAAM,CAACtB,EAAD,EAAIC,EAAJ,CAAX;AACAsB,QAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EAFA,CAEmB;;AACnBD,QAAAA,CAAC;AACDI,QAAAA,OAAO,CAACC,GAAR,CAAYL,CAAZ;;AACA,YAAGM,MAAM,CAACzB,EAAD,CAAN,GAAWyB,MAAM,CAACP,EAAD,CAAjB,GAAsB,CAAzB,EAA4B;AAC1BE,UAAAA,KAAK,GAACM,IAAI,CAACC,GAAL,CAAS,CAACT,EAAE,GAAClB,EAAJ,IAAQkB,EAAjB,EAAqBU,OAArB,CAA6B,CAA7B,CAAN;AACA5B,UAAAA,EAAE,GAACkB,EAAH;AACD,SAHD,MAIK;AACHE,UAAAA,KAAK,GAACM,IAAI,CAACC,GAAL,CAAS,CAACT,EAAE,GAACjB,EAAJ,IAAQiB,EAAjB,EAAqBU,OAArB,CAA6B,CAA7B,CAAN;AACA3B,UAAAA,EAAE,GAACiB,EAAH;AACD,SAZD,CAaA;;;AACA,YAAIW,GAAG,GAAGd,KAAK,CAACe,SAAN,CAAgBX,CAAhB,CAAV,CAdA,CAgBA;;AACA,YAAIY,KAAK,GAAGF,GAAG,CAACG,UAAJ,CAAe,CAAf,CAAZ;AACA,YAAIC,KAAK,GAAGJ,GAAG,CAACG,UAAJ,CAAe,CAAf,CAAZ;AACA,YAAIE,KAAK,GAAGL,GAAG,CAACG,UAAJ,CAAe,CAAf,CAAZ;AACA,YAAIG,KAAK,GAAGN,GAAG,CAACG,UAAJ,CAAe,CAAf,CAAZ;AACA,YAAII,KAAK,GAAGP,GAAG,CAACG,UAAJ,CAAe,CAAf,CAAZ,CArBA,CAuBA;;AACAD,QAAAA,KAAK,CAACM,SAAN,GAAkBlB,CAAlB;AACAc,QAAAA,KAAK,CAACI,SAAN,GAAkBrC,EAAlB;AACAkC,QAAAA,KAAK,CAACG,SAAN,GAAkBpC,EAAlB;AACAkC,QAAAA,KAAK,CAACE,SAAN,GAAkBnB,EAAlB;AACAkB,QAAAA,KAAK,CAACC,SAAN,GAAkBjB,KAAlB;AACD,OA7BD,QA6BOA,KAAK,GAAC,QA7Bb;AA8BD,KArF+B;;AAAA,SAuFhCE,MAvFgC,GAuFvB,CAACtB,EAAD,EAAIC,EAAJ,KAAW;AAClB,aAAO,CAACoB,UAAU,CAACrB,EAAD,CAAV,GAAeqB,UAAU,CAACpB,EAAD,CAA1B,IAAgC,CAAvC;AACD,KAzF+B;;AAAA,SA4FhCwB,MA5FgC,GA4FtBa,CAAD,IAAO;AACd,YAAMC,UAAU,GAAGzC,QAAnB;AACA,YAAM0C,IAAI,GAAGtD,IAAI,CAACuD,OAAL,CAAaF,UAAb,CAAb;AACA,UAAIG,KAAK,GAAG;AAACC,QAAAA,CAAC,EAACtB,UAAU,CAACiB,CAAD;AAAb,OAAZ;AACA,aAAOE,IAAI,CAACI,QAAL,CAAcF,KAAd,CAAP;AACD,KAjG+B;AAAA;;AAkGhC/C,EAAAA,MAAM,GAAE;AACR,wBAEE;AAAA,8BACE;AAAA,+BAAK,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAA,gCACE,QAAC,SAAD;AAAA,kCACA;AAAA,sCAAeG,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAA,yCAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAJ,SAAoBE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA,eAGA;AAAA,yCAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAJ,SAAoBC,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHA,eAMA;AAAM,YAAA,QAAQ,EAAEW,YAAhB;AAAA,oCACI;AAAA,oDAEE;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,KAAK,EAAEd,QAA1B;AAAoC,gBAAA,QAAQ,EAAE,KAAKU;AAAnD;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAMI;AAAA;AAAA;AAAA;AAAA,oBANJ,eAOI;AAAA,2CACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADH,qBAEE;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,KAAK,EAAER,EAA1B;AAA8B,gBAAA,QAAQ,EAAE,KAAKU;AAA7C;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ,eAYI;AAAA;AAAA;AAAA;AAAA,oBAZJ,eAaI;AAAA,2CACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADH,qBAEE;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,KAAK,EAAET,EAA1B;AAA8B,gBAAA,QAAQ,EAAE,KAAKU;AAA7C;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbJ,eAiBI;AAAA;AAAA;AAAA;AAAA,oBAjBJ,EAkBKZ,QAAQ,KAAK,CAAb,gBAAkB;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,QAAQ,EAAEA,QAAhC;AAA0C,cAAA,KAAK,EAAC,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAlB,gBAA6F;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,QAAQ,EAAE,CAACA,QAAjC;AAA2C,cAAA,KAAK,EAAC,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAlBlG;AAAA;AAAA;AAAA;AAAA;AAAA,kBANA,eA2BA;AAAA;AAAA;AAAA;AAAA,kBA3BA,eA6BA;AAAA;AAAA;AAAA;AAAA,kBA7BA,eA6BS;AAAA;AAAA;AAAA;AAAA,kBA7BT;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAgCI,QAAC,SAAD;AAAW,UAAA,IAAI,MAAf;AAAA,iCACA;AAAA,mCACC;AAAO,cAAA,EAAE,EAAC,QAAV;AAAA,sCACG;AAAA,wCACE;AAAI,kBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAI,kBAAA,KAAK,EAAC,KAAV;AAAA,+CAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAGE;AAAI,kBAAA,KAAK,EAAC,KAAV;AAAA,+CAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,eAIE;AAAI,kBAAA,KAAK,EAAC,KAAV;AAAA,+CAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF,eAKE;AAAI,kBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADH,eAQG;AAAI,gBAAA,KAAK,EAAC,WAAV;AAAA,wCACE;AAAI,kBAAA,KAAK,EAAC,KAAV;AAAgB,kBAAA,EAAE,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAI,kBAAA,KAAK,EAAC,KAAV;AAAgB,kBAAA,EAAE,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,wBAFF,eAGE;AAAI,kBAAA,KAAK,EAAC,KAAV;AAAgB,kBAAA,EAAE,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,wBAHF,eAIE;AAAI,kBAAA,KAAK,EAAC,KAAV;AAAgB,kBAAA,EAAE,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,wBAJF,eAKE;AAAI,kBAAA,KAAK,EAAC,KAAV;AAAgB,kBAAA,EAAE,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,wBALF;AAAA;AAAA;AAAA;AAAA;AAAA,sBARH;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBAhCJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AA4DG;;AA/J6B;;AAmKlC,eAAeH,SAAf","sourcesContent":["import React, { useState, useEffect, Component } from 'react';\nimport * as math from 'mathjs';\nimport '../App.css';\nimport Topbar from './Topbar';\nimport { Container } from 'react-bootstrap';\nimport {XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines, LineSeries} from 'react-vis';\nimport { render } from '@testing-library/react';\n\nclass Bisection extends Component {\n  state = {\n    equation: '',\n    btnState: false,\n    xl: 0,\n    xr: 0,\n  }\n\n  handleFormChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n\n  setEquation = (e) =>{\n    const {equation , value} = e.target;\n    this.setState({\n      [equation]: value,\n    });\n  }\n\n  setBtnState = (e) =>{\n    this.setState({\n      btnState: e.target.value\n    });\n  }\n\n  setXL = (e) =>{\n    this.setState({\n      xl: e.target.value\n    });\n  }\n\n  setXR = (e) =>{\n    this.setState({\n      xr: e.target.value\n    });\n  }\n\n  handleSubmit = (e) => {\n    if(btnState === 0)\n    {\n      e.preventDefault();\n      bisection();\n      setBtnState(1);\n    }\n  };\n  \n  bisection = () => {\n    let table = document.getElementById(\"output\");\n    var xm = 0;\n    var n = 0;\n    var check = parseFloat(0.0000000);\n    do{\n      xm = findxm(xl,xr);\n      console.log(check);//error\n      n++;\n      console.log(n);\n      if(funcal(xl)*funcal(xm)>0) {\n        check=Math.abs((xm-xl)/xm).toFixed(8);\n        xl=xm;\n      }\n      else {\n        check=Math.abs((xm-xr)/xm).toFixed(8);\n        xr=xm;\n      }\n      // Create an empty <tr> element and add it to the 1st position of the table:\n      let row = table.insertRow(n);\n  \n      // Insert new cells (<td> elements) at the 1st and 2nd position of the \"new\" <tr> element:\n      var cell1 = row.insertCell(0);\n      var cell2 = row.insertCell(1);\n      var cell3 = row.insertCell(2);\n      var cell4 = row.insertCell(3);\n      var cell5 = row.insertCell(4);\n  \n      // Add some text to the new cells:\n      cell1.innerHTML = n;\n      cell2.innerHTML = xl;\n      cell3.innerHTML = xr;\n      cell4.innerHTML = xm;\n      cell5.innerHTML = check;\n    }while(check>0.000001)\n  }\n  //หาXm ปกติ\n  findxm = (xl,xr) => {\n    return (parseFloat(xl)+parseFloat(xr))/2\n  }\n  \n  // แก้สมาการ X ใช้ไลบรารี่แมทจ้าา\n  funcal = (X) => {\n    const expression = equation;\n    const expr = math.compile(expression);\n    let scope = {x:parseFloat(X)};\n    return expr.evaluate(scope);\n  }\n  render(){\n  return (\n    \n    <div>\n      <div><Topbar/></div>\n    \n      <div>\n        <Container>  \n        <p>Equation : {equation}</p>\n        <p>X<sub>L</sub> : {xl}</p>\n        <p>X<sub>R</sub> : {xr}</p>\n\n\n        <form onSubmit={handleSubmit}>\n            <label>\n              Equation :\n              <input type=\"text\" value={equation} onChange={this.setEquation}\n              />\n            </label>\n            <br></br>\n            <label>\n              X<sub>L</sub> :\n              <input type=\"text\" value={xl} onChange={this.setXL}\n              />\n            </label>\n            <br></br>\n            <label>\n              X<sub>R</sub> :\n              <input type=\"text\" value={xr} onChange={this.setXR}/>\n            </label>\n            <br></br> \n            {btnState === 0  ? <button type=\"submit\" disabled={btnState} value=\"Submit\">Submit</button> : <button type=\"submit\" disabled={!btnState} value=\"Submit\">Reset</button> }\n\n        </form>\n        <div>\n      </div>\n        <br></br><br></br>\n        </Container>\n          <Container text> \n          <div>\n           <table id=\"output\">\n              <tr>\n                <th width=\"20%\">Iteration</th>\n                <th width=\"25%\">X<sub>L</sub></th>\n                <th width=\"25%\">X<sub>R</sub></th>\n                <th width=\"30%\">X<sub>M</sub></th>\n                <th width=\"30%\">Error</th>\n              </tr>\n              <tr class=\"list-data\">\n                <td width=\"20%\" id=\"Iteration\"></td>\n                <td width=\"25%\" id=\"xl1\"></td>\n                <td width=\"25%\" id=\"xr1\"></td>\n                <td width=\"30%\" id=\"x\"></td>\n                <td width=\"30%\" id=\"error\"></td>\n              </tr>\n            </table>\n          </div>\n          </Container> \n      </div>\n      \n    </div>\n  );}\n}\n\n\nexport default Bisection;"]},"metadata":{},"sourceType":"module"}