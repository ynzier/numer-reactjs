{"ast":null,"code":"export default function BisectionAPI() {\n  console.log('Bisec API');\n  var xl = parseFloat(req.body.xl);\n  var xr = parseFloat(req.body.xr);\n  const equation = math.compile(req.body.equation);\n  var xm = 0;\n  var check = parseFloat(0.0000000);\n  var n = 0;\n  var tmpArr = [];\n\n  do {\n    xm = findxm(xl, xr);\n    console.log(check); //error\n\n    n++;\n    console.log(n);\n\n    if (funcal(xl) * funcal(xm) > 0) {\n      check = Math.abs((xm - xl) / xm).toFixed(8);\n      xl = xm;\n    } else {\n      check = Math.abs((xm - xr) / xm).toFixed(8);\n      xr = xm;\n    }\n\n    console.log('iteration: ', n, ' Xl: ', xl, ' XR: ', xr, ' XM: ', xm);\n    tmpArr.push({\n      'iteration': n,\n      'xl': xl,\n      'xr': xr,\n      'xm': xm,\n      'Error': check\n    });\n  } while (check > 0.000001 || n < 20);\n\n  const findxm = (xl, xr) => {\n    return (parseFloat(xl) + parseFloat(xr)) / 2;\n  };\n\n  const funcal = X => {\n    const expression = equation;\n    const expr = math.compile(expression);\n    let scope = {\n      x: parseFloat(X)\n    };\n    return expr.evaluate(scope);\n  };\n\n  res.json({\n    tmpArr: tmpArr\n  });\n}\n_c = BisectionAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"BisectionAPI\");","map":{"version":3,"sources":["C:/numer_site/src/api/BisectionAPI.js"],"names":["BisectionAPI","console","log","xl","parseFloat","req","body","xr","equation","math","compile","xm","check","n","tmpArr","findxm","funcal","Math","abs","toFixed","push","X","expression","expr","scope","x","evaluate","res","json"],"mappings":"AACA,eAAe,SAASA,YAAT,GAAuB;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,MAAIC,EAAE,GAAGC,UAAU,CAACC,GAAG,CAACC,IAAJ,CAASH,EAAV,CAAnB;AACA,MAAII,EAAE,GAAGH,UAAU,CAACC,GAAG,CAACC,IAAJ,CAASC,EAAV,CAAnB;AACA,QAAMC,QAAQ,GAAGC,IAAI,CAACC,OAAL,CAAaL,GAAG,CAACC,IAAJ,CAASE,QAAtB,CAAjB;AACA,MAAIG,EAAE,GAAG,CAAT;AACA,MAAIC,KAAK,GAAGR,UAAU,CAAC,SAAD,CAAtB;AACA,MAAIS,CAAC,GAAC,CAAN;AACA,MAAIC,MAAM,GAAG,EAAb;;AAEA,KAAE;AACEH,IAAAA,EAAE,GAAGI,MAAM,CAACZ,EAAD,EAAII,EAAJ,CAAX;AAEAN,IAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ,EAHF,CAGqB;;AACnBC,IAAAA,CAAC;AACDZ,IAAAA,OAAO,CAACC,GAAR,CAAYW,CAAZ;;AACA,QAAGG,MAAM,CAACb,EAAD,CAAN,GAAWa,MAAM,CAACL,EAAD,CAAjB,GAAsB,CAAzB,EAA4B;AAC1BC,MAAAA,KAAK,GAACK,IAAI,CAACC,GAAL,CAAS,CAACP,EAAE,GAACR,EAAJ,IAAQQ,EAAjB,EAAqBQ,OAArB,CAA6B,CAA7B,CAAN;AACAhB,MAAAA,EAAE,GAAIQ,EAAN;AACD,KAHD,MAIK;AACHC,MAAAA,KAAK,GAACK,IAAI,CAACC,GAAL,CAAS,CAACP,EAAE,GAACJ,EAAJ,IAAQI,EAAjB,EAAqBQ,OAArB,CAA6B,CAA7B,CAAN;AACAZ,MAAAA,EAAE,GAAII,EAAN;AACD;;AACDV,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BW,CAA3B,EAA8B,OAA9B,EAAsCV,EAAtC,EAAyC,OAAzC,EAAiDI,EAAjD,EAAoD,OAApD,EAA4DI,EAA5D;AAEAG,IAAAA,MAAM,CAACM,IAAP,CAAY;AACV,mBAAaP,CADH;AAEV,YAAMV,EAFI;AAGV,YAAMI,EAHI;AAIV,YAAMI,EAJI;AAKV,eAASC;AALC,KAAZ;AAQD,GAxBH,QAwBSA,KAAK,GAAC,QAAN,IAAkBC,CAAC,GAAC,EAxB7B;;AA2BE,QAAME,MAAM,GAAG,CAACZ,EAAD,EAAII,EAAJ,KAAW;AACxB,WAAO,CAACH,UAAU,CAACD,EAAD,CAAV,GAAeC,UAAU,CAACG,EAAD,CAA1B,IAAgC,CAAvC;AACD,GAFD;;AAGA,QAAMS,MAAM,GAAIK,CAAD,IAAO;AACpB,UAAMC,UAAU,GAAGd,QAAnB;AACA,UAAMe,IAAI,GAAGd,IAAI,CAACC,OAAL,CAAaY,UAAb,CAAb;AACA,QAAIE,KAAK,GAAG;AAACC,MAAAA,CAAC,EAACrB,UAAU,CAACiB,CAAD;AAAb,KAAZ;AACA,WAAOE,IAAI,CAACG,QAAL,CAAcF,KAAd,CAAP;AACD,GALD;;AAOAG,EAAAA,GAAG,CAACC,IAAJ,CAAS;AACPd,IAAAA,MAAM,EAAEA;AADD,GAAT;AAMD;KArDqBd,Y","sourcesContent":["\r\nexport default function BisectionAPI(){\r\n  console.log('Bisec API')\r\n  var xl = parseFloat(req.body.xl);\r\n  var xr = parseFloat(req.body.xr);\r\n  const equation = math.compile(req.body.equation);\r\n  var xm = 0;\r\n  var check = parseFloat(0.0000000);\r\n  var n=0;\r\n  var tmpArr = [];\r\n\r\n  do{   \r\n      xm = findxm(xl,xr);\r\n      \r\n      console.log(check);//error\r\n      n++;\r\n      console.log(n);\r\n      if(funcal(xl)*funcal(xm)>0) {\r\n        check=Math.abs((xm-xl)/xm).toFixed(8);\r\n        xl = (xm);\r\n      }\r\n      else {\r\n        check=Math.abs((xm-xr)/xm).toFixed(8);\r\n        xr = (xm);\r\n      }\r\n      console.log('iteration: ' ,n, ' Xl: ',xl,' XR: ',xr,' XM: ',xm);\r\n\r\n      tmpArr.push({\r\n        'iteration': n,\r\n        'xl': xl,\r\n        'xr': xr,\r\n        'xm': xm,\r\n        'Error': check,\r\n      });\r\n      \r\n    }while(check>0.000001 || n<20)\r\n\r\n\r\n    const findxm = (xl,xr) => {\r\n      return (parseFloat(xl)+parseFloat(xr))/2\r\n    }\r\n    const funcal = (X) => {\r\n      const expression = equation;\r\n      const expr = math.compile(expression);\r\n      let scope = {x:parseFloat(X)};\r\n      return expr.evaluate(scope);\r\n    }\r\n\r\n    res.json({\r\n      tmpArr: tmpArr\r\n  })\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}